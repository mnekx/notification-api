name: CI

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set NODE_ENV to test
        run: echo "NODE_ENV=test" >> $GITHUB_ENV

      - name: Create .env.test
        run: |
          echo "DATABASE_URL=${{ secrets.TEST_DATABASE_URL }}" >> .env.test
          echo "JWT_SECRET=${{ secrets.TEST_JWT_SECRET }}" >> .env.test
          echo "PORT=3001" >> .env.test

      - name: Copy test env
        run: cp .env.test .env

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Push schema to test.db
        run: npx prisma db push

      - name: Reset and migrate database (SQLite)
        run: npx prisma migrate reset --force --skip-seed

      - name: Build TypeScript
        run: npm run build

      - name: Run tests
        run: npm test -- --bail --ci

      - name: Build Docker image
        run: docker build -t notification-app:latest .
