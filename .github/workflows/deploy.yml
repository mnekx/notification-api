name: Deploy to Amazon ECS

on:
  workflow_dispatch: # allows manual trigger
  push:
    branches:
      - master
    tags:
      - "v*"

jobs:
  deploy:
    name: Deploy to Amazon ECS
    runs-on: ubuntu-latest
    environment: deploy-env

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Generate .env.production
        run: |
          echo "DATABASE_URL=${{ secrets.PROD_DATABASE_URL }}" >> .env.production
          echo "JWT_SECRET=${{ secrets.PROD_JWT_SECRET }}" >> .env.production
          echo "PORT=${{ secrets.PROD_PORT }}" >> .env.production

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }} # e.g., 123456789012.dkr.ecr.eu-north-1.amazonaws.com
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }} # e.g., notification-app
        run: |
          docker build -t $ECR_REPOSITORY .
          docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY
          docker push $ECR_REGISTRY/$ECR_REPOSITORY

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: render-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ecs-task-def.json
          container-name: notification-container
          image: ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}

      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-container.outputs.task-definition }}
          service: notification-service
          cluster: notification-cluster
          wait-for-service-stability: true
